spring.application.name=authlogin

# 서버포트
server.port=8080
# localhost말고 ip접속을위한
# server.address=192.168.0.19


# 데이터베이스 연결
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://{디비주소}:3306/salesking?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username={이름}
spring.datasource.password={비번}

# model 프로퍼티 camel case 설정
mybatis.configuration.map-underscore-to-camel-case=true
# xml파일 result type에 패키지명을 생략할 수 있도록 alias 설정  entity 경로안에 있어야 리졸트타입가능 
mybatis.type-aliases-package=com.mydata.authlogin.entity
#마이바티스 커스텀 경로 (커스텀 모든 맵퍼안에 모든거 사용가능)
mybatis.mapper-locations=/mapper/**/*.xml
mybatis.configuration.jdbc-type-for-null=null

# DB디버깅
logging.level.com.mydata.authlogin.mapper=trace




#filepath 이미지파일 저장할장소
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-request-size=30MB
spring.servlet.multipart.max-file-size=10MB





# spring.security.oauth2.client.provider.kakao.user-name-attribute = response (getAttributes 꺼내서 쓸수있는 리턴변수 (토큰서버에서줌) )
# spring.security.oauth2.client.provider.kakao.user-info-uri: 사용자 정보가져오는 url

# oauth2 구글로그인 clint 추가
spring.security.oauth2.client.registration.google.client-id={내 구글 api 키}
spring.security.oauth2.client.registration.google.client-secret={구글 키}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/google


# oauth2 네이버로그인 provider 추가
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri: https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri: https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
# oauth2 네이버로그인 clint 추가
spring.security.oauth2.client.registration.naver.client-id={네이버 api 키}
spring.security.oauth2.client.registration.naver.client-secret={네이버 키}
spring.security.oauth2.client.registration.naver.scope=profile,email
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/naver



# oauth2 카카오로그인 provider 추가
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri:https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri: https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=properties
# spring.security.oauth2.client.provider.kakao.user-name-attribute=Kakaoaccount

# oauth2 카카오로그인 clint 추가
spring.security.oauth2.client.registration.kakao.client-id={내 카카오 api 키}
spring.security.oauth2.client.registration.kakao.client-secret={카카오 키}
# spring.security.oauth2.client.registration.kakao.scope=profile,email  추후에 비즈니스 버전으로 하면 추가
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
# spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method:client_secret_post


#폼태그에서 put,delete 상요하기
spring.mvc.hiddenmethod.filter.enabled=true

# 새로고침으로 페이지 정적리소스 반응
spring.devtools.livereload.enabled=true
